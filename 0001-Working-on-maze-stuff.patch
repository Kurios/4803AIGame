From fe6e96387067b3c0a2a15fbce520498b3103137c Mon Sep 17 00:00:00 2001
From: Matt <mlee93@gatech.edu>
Date: Sun, 4 Nov 2012 15:29:41 -0500
Subject: [PATCH] -Working on maze stuff

---
 Caverns/Caverns/Caverns.csproj    |  4 ++++
 KuriosityLib/KuriosityXLib.csproj |  7 +++++++
 KuriosityLib/TileMap/Loader.cs    | 22 ++++++++++++++++++----
 3 files changed, 29 insertions(+), 4 deletions(-)

diff --git a/Caverns/Caverns/Caverns.csproj b/Caverns/Caverns/Caverns.csproj
index e377f35..34dd528 100644
--- a/Caverns/Caverns/Caverns.csproj
+++ b/Caverns/Caverns/Caverns.csproj
@@ -194,6 +194,10 @@
       <Project>{1CDF7EB2-A2B5-45AE-8813-76423750C544}</Project>
       <Name>KuriosityXLib</Name>
     </ProjectReference>
+    <ProjectReference Include="..\..\MazeMaker\Project1\MazeMaker.csproj">
+      <Project>{23A4DCE2-D962-4C77-80E2-DF5747317AF4}</Project>
+      <Name>MazeMaker</Name>
+    </ProjectReference>
     <ProjectReference Include="..\CavernsContent\CavernsContent.contentproj">
       <Name>CavernsContent %28Content%29</Name>
       <XnaReferenceType>Content</XnaReferenceType>
diff --git a/KuriosityLib/KuriosityXLib.csproj b/KuriosityLib/KuriosityXLib.csproj
index 56d35e1..a73760b 100644
--- a/KuriosityLib/KuriosityXLib.csproj
+++ b/KuriosityLib/KuriosityXLib.csproj
@@ -109,11 +109,18 @@
     <Compile Include="TileMap\Loader.cs" />
     <Compile Include="TileMap\Map.cs" />
     <Compile Include="TileMap\MapFactory.cs" />
+    <Compile Include="TileMap\MazeLoader.cs" />
     <Compile Include="TileMap\SubMap.cs" />
     <Compile Include="TileMap\SubMapFactory.cs" />
     <Compile Include="TileMap\Tile.cs" />
     <Compile Include="TileMap\TileFactory.cs" />
   </ItemGroup>
+  <ItemGroup>
+    <ProjectReference Include="..\MazeMaker\Project1\MazeMaker.csproj">
+      <Project>{23A4DCE2-D962-4C77-80E2-DF5747317AF4}</Project>
+      <Name>MazeMaker</Name>
+    </ProjectReference>
+  </ItemGroup>
   <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
   <Import Project="$(MSBuildExtensionsPath)\Microsoft\XNA Game Studio\Microsoft.Xna.GameStudio.targets" />
   <!--
diff --git a/KuriosityLib/TileMap/Loader.cs b/KuriosityLib/TileMap/Loader.cs
index 02ca63a..12f1165 100644
--- a/KuriosityLib/TileMap/Loader.cs
+++ b/KuriosityLib/TileMap/Loader.cs
@@ -11,12 +11,13 @@ namespace KuriosityXLib.TileMap
 {
     public class Loader
     {
+        //HEY!  groups[index] = subexpression for regexpression.
         public static Map CreateMap(Game game,Texture2D spriteMap, String[] gameDesc){
             Map ret = null;
             //int subMapCounter = 0;
-            Regex tileRegex = new Regex(@"t (?:(\d+),(\d+)) (?:(\d+),(\d+)|null) (?:(\d+),(\d+)|null) (true)?");
-            Regex subMapRegex = new Regex(@"(\d+)\-(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)");
-            Regex mapDefine = new Regex(@"md (\d+) (\d+)");
+            Regex tileRegex = new Regex(@"t (?:(\d+),(\d+)) (?:(\d+),(\d+)|null) (?:(\d+),(\d+)|null) (true)?");    //This is looking at specific locations in the original tile map.  The 2nd to last entry is a 'refernce' to be used for the submap, and the string is a reference to determine what the tile corresponds to.
+            Regex subMapRegex = new Regex(@"(\d+)\-(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)  ?(\d+)"); //This is defined to be the tiles specified for a submap
+            Regex mapDefine = new Regex(@"md (\d+) (\d+)"); //This is defined as the dimensions of the map.
             //Regex subMapModeRegex = new Regex(@"(?:(\d),(\d)|null) (?:(\d),(\d)|null) (?:(\d),(\d)|null) (true|false)");
             Regex mapSet = new Regex(@"ms (\d+) (\d+) (\d+)");
             //Regex mapCreate = new Regex(
@@ -25,37 +26,49 @@ namespace KuriosityXLib.TileMap
             MapFactory mapFact = null;
             TileFactory tiles = new TileFactory(spriteMap);
             SubMapFactory subMaps = new SubMapFactory(tiles);
+            
+            //For each string of lines in the textual map
             foreach (String line in gameDesc)
             {
+                //If this is defined to be a map,
                 if (mapDefine.IsMatch(line))
                 {
                     matches = mapDefine.Matches(line);
                     mapFact = new MapFactory(subMaps, int.Parse(matches[0].Groups[1].Value), int.Parse(matches[0].Groups[2].Value));
                 }
+                //If it is information for a tile,
                 else if (tileRegex.IsMatch(line))
                 {
-                    matches = tileRegex.Matches(line);
+                    matches = tileRegex.Matches(line);  //Collection of matches based on regex
+                    //[1],[2] = first set of (\d+),(\d+)
                     tiles.SetBaseSprite(new Rectangle(int.Parse(matches[0].Groups[1].Value)*32, int.Parse(matches[0].Groups[2].Value)*32, 32, 32));
+                    //[3] [4] = second set of (\d+),(\d+).  Most often, both are null.
                     if (matches[0].Groups[3].Success)
                     {
                         tiles.SetAccentSprite(new Rectangle(int.Parse(matches[0].Groups[3].Value)*32, int.Parse(matches[0].Groups[4].Value)*32, 32, 32));
                     }
+                    //[5] = passability [6] = third set of (\d+),(\d+).  Most often, both are null.
                     if (matches[0].Groups[5].Success)
                     {
                         tiles.SetTopSprite(new Rectangle(int.Parse(matches[0].Groups[5].Value)*32, int.Parse(matches[0].Groups[6].Value)*32, 32, 32));
                     }
+                    //[7] = Passability
                     tiles.SetPassible(matches[0].Groups[7].Success);
                     tiles.AddTile();
                 }
+                //Or if it is information for a submap,
                 else if (subMapRegex.IsMatch(line))
                 {
                     matches = subMapRegex.Matches(line);
+                    //From the first tile entry onward...
                     for (int x = 0; x < 32; x++)
                     {
+                        //[2] = row entry, [x+3] = col entry, [1] = sub-map
                         subMaps.setTile(x, int.Parse(matches[0].Groups[2].Value), int.Parse(matches[0].Groups[x + 3].Value), int.Parse(matches[0].Groups[1].Value));
                     }
                     if (int.Parse(matches[0].Groups[1].Value) == 31) subMaps.AddSubMap();
                 }
+                //If it is defined for a specific submap (Submap 1-2, Submap 2-2, etc...),
                 else if (mapSet.IsMatch(line))
                 {
                     matches = mapSet.Matches(line);
@@ -67,6 +80,7 @@ namespace KuriosityXLib.TileMap
                 }
             }
             
+            //Generate the sprite map based on the map returned.  spriteMap is the 2D map used as a reference.
             ret = mapFact.generate(spriteMap);
             return ret;
         }
-- 
1.7.11.msysgit.1

